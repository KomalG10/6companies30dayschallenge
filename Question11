//maximum sum bst

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 int ans;
 class result{
     public:
     bool bst;
     int maxi;
     int mini;
     int sum;
     result()
     {
         bst =true;
         maxi = INT_MIN;
         mini = INT_MAX;
         sum =0;
      }
 };
class Solution {
public:
     result calcsum(TreeNode * root)
     {
         if(root==NULL)
         return result();
     
     result p ;
     result pl = calcsum(root->left);
     result pr = calcsum(root->right);

     if ( pl.bst==true && pr.bst== true && root->val>pl.maxi && root->val<pr.mini)
     {
         p.bst= true;
         p.sum = pl.sum + pr.sum + root->val;
         p.maxi = max(root->val,pr.maxi);
         p.mini = min(root->val,pl.mini);
     }
     else
     {
         p.bst = false;
         p.sum = 0; 
     }

     ans = max(ans,p.sum);
     return p;
     }

    int maxSumBST(TreeNode* root) {
         ans =0;
         calcsum(root);
         return ans;
    }
};
